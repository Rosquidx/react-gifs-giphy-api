{"version":3,"sources":["Components/AddCategory.jsx","Components/helpers/getGifs.jsx","hooks/useFetchGifs.jsx","Components/GridGifItem.jsx","Components/GidGrif.jsx","GifExpertApp.jsx","index.js"],"names":["AddCategory","setCategorias","useState","valorInput","setValorInput","onSubmit","e","preventDefault","trim","length","cats","htmlFor","type","placeholder","value","onChange","target","propType","PropTypes","func","isRequired","getGifs","categoria","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","useFetchGifs","loading","state","setState","useEffect","then","imgs","setTimeout","GridGifItem","className","src","alt","GidGrif","GifExpertApp","categorias","reactDOM","render","document","getElementById"],"mappings":"oNAGMA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cACrB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAaA,OACE,8BACE,uBAAMC,SAVW,SAACC,GACpBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAc,SAACS,GAAD,OAAWP,GAAX,mBAA0BO,OACxCN,EAAc,MAKd,UACE,uBAAOO,QAAQ,SAAf,kCAAoD,uBAAOC,KAAK,SAASC,YAAY,cAAcC,MAAOX,EAAYY,SAflG,SAACT,GACzBF,EAAcE,EAAEU,OAAOF,gBAoB3Bd,EAAYiB,SAAW,CACrBhB,cAAeiB,IAAUC,KAAKC,YAEjBpB,Q,+BC7BFqB,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDAE2BC,UAAUH,GAFrC,+DAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC3B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAcZM,GAdY,4CAAH,sDCyBLO,EAtBM,SAACf,GAClB,MAA0BpB,mBAAS,CAC/B2B,KAAM,GACNS,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAiBA,OAZAC,qBAAU,WACNpB,EAAQC,GACPoB,MAAK,SAAAC,GACFC,YAAW,WACPJ,EAAS,CACLX,KAAOc,EACPL,SAAS,MAEd,UAET,CAAChB,IAEIiB,GCTIM,EAVK,SAAC,GAAqB,EAApBZ,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAE7B,OACI,sBAAKsB,UAAU,6CAAf,UACI,qBAAKC,IAAKvB,EAAKwB,IAAKd,IACpB,kCAAKA,EAAL,WCiBGe,EAnBC,SAAC,GAAiB,IAAhB3B,EAAe,EAAfA,UAEhB,EAA+Be,EAAaf,GAAhCa,EAAZ,EAAON,KAAaS,EAApB,EAAoBA,QAGpB,OACE,qCACE,oBAAIQ,UAAU,GAAd,SAAkBxB,IAEjBgB,GAAW,mBAAGQ,UAAU,yCAAb,yBAEZ,qBAAKA,UAAU,YAAf,SACGX,EAAOJ,KAAI,SAACzB,GAAD,OACV,cAAC,EAAD,eAA4BA,GAAVA,EAAE2B,aCSfiB,EAvBM,WACnB,MAAoChD,mBAAS,CAC3C,kBADF,mBAAOiD,EAAP,KAAmBlD,EAAnB,KASA,OACE,gCACE,oBAAI6C,UAAU,gDAAd,0BACA,cAAC,EAAD,CAAa7C,cAAeA,IAC5B,uBAECkD,EAAWpB,KAAI,SAACzB,GAAD,OACd,cAAC,EAAD,CAAiBgB,UAAWhB,GAAdA,U,MCftB8C,IAASC,OAAO,cAAC,EAAD,IAAkBC,SAASC,eAAe,W","file":"static/js/main.a1880878.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst AddCategory = ({ setCategorias }) => {\r\n  const [valorInput, setValorInput] = useState('');\r\n  const handleInputChange = (e) => {\r\n    setValorInput(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (valorInput.trim().length > 2) {\r\n      setCategorias((cats) => [valorInput, ...cats]);\r\n      setValorInput('');\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleSubmit}>\r\n        <label htmlFor=\"Buscar\">Buscar gif deseado: </label><input type=\"search\" placeholder=\"Dragon ball\" value={valorInput} onChange={handleInputChange} />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nAddCategory.propType = {\r\n  setCategorias: PropTypes.func.isRequired,\r\n};\r\nexport default AddCategory;\r\n","export const getGifs = async (categoria) => {\r\n    const url =\r\n        `https://api.giphy.com/v1/gifs/search?q=${encodeURI(categoria)}&limit=15&api_key=LxPPT6nWXRts8RhK1fe1BXb13UkJgbLc`;\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map((img) => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url,\r\n        };\r\n    });\r\n\r\n    return gifs;\r\n};","import { useState, useEffect } from 'react'\r\nimport { getGifs } from '../Components/helpers/getGifs';\r\n\r\nconst useFetchGifs = (categoria) => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n        getGifs(categoria)\r\n        .then(imgs =>{\r\n            setTimeout(() => {\r\n                setState({\r\n                    data : imgs,\r\n                    loading: false\r\n                })\r\n            }, 500);\r\n        })\r\n    },[categoria]);\r\n\r\n    return state;\r\n\r\n}\r\n\r\nexport default useFetchGifs\r\n","import React from 'react'\r\n\r\nconst GridGifItem = ({id, title, url}) => {\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__backInDown\">\r\n            <img src={url} alt={title}/>\r\n            <p> {title} </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GridGifItem\r\n","import React from \"react\";\r\nimport useFetchGifs from \"../hooks/useFetchGifs\";\r\nimport GridGifItem from \"./GridGifItem\";\r\n\r\n\r\nconst GidGrif = ({categoria}) => {\r\n\r\n  const {data:images, loading} = useFetchGifs(categoria);\r\n\r\n\r\n  return (\r\n    <>\r\n      <h3 className=\"\">{categoria}</h3>\r\n\r\n      {loading && <p className=\"animate__animated animate__slideInDown\">Cargando...</p>}\r\n\r\n      <div className=\"card-grid\">\r\n        {images.map((e) => (\r\n          <GridGifItem key={e.id} {...e} />\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\nexport default GidGrif;\r\n\r\n","import React, { useState } from \"react\";\r\nimport AddCategory from \"./Components/AddCategory\";\r\nimport GidGrif from \"./Components/GidGrif\";\r\n\r\nconst GifExpertApp = () => {\r\n  const [categorias, setCategorias] = useState([\r\n    'Ariana Grande'\r\n  ]);\r\n\r\n//   const handleAdd = () => {\r\n//     setCategorias([...categorias, \"Libelula\"]);\r\n    // setCategorias((cats) => [...cats, \"Los 100\"]);\r\n//   };\r\n\r\n  return (\r\n    <div>\r\n      <h2 className=\"titulo animate__animated animate__slideInLeft\">GifExpertApp</h2>\r\n      <AddCategory setCategorias={setCategorias}/>\r\n      <hr />\r\n\r\n      {categorias.map((e) => (\r\n        <GidGrif key={e} categoria={e}/>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GifExpertApp;\r\n","import React from \"react\";\r\nimport reactDOM from \"react-dom\";\r\nimport GifExpertApp from \"./GifExpertApp\";\r\nimport './index.css';\r\n\r\n\r\nreactDOM.render(<GifExpertApp />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}